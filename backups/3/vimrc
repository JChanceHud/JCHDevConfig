set nocompatible
filetype off
let mapleader = ","

filetype plugin on
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'Shougo/neocomplcache'
Bundle 'scrooloose/syntastic'

filetype plugin indent on

set backspace=indent,eol,start

if has('mouse')
  set mouse=a
endif

set autoindent

syntax on
set background=dark
colorscheme solarized

" show trailing whitespace as underscores
"set list
"set listchars=trail:_,tab:  

set number

" Custom key mappings
" Map tab to switch tabs
nmap <Tab> gt
nmap <S-Tab> gT
" Map ` to switch between split windows
nmap ` <C-w>w
nmap ~ <C-w>W
" Map \ and | to switch windows around vertically and horizontally
nmap \ <C-w>

nmap <silent> <C-Up> :wincmd k<CR>
nmap <silent> <C-Down> :wincmd j<CR>
nmap <silent> <C-Left> :wincmd h<CR>
nmap <silent> <C-Right> :wincmd l<CR>

" set expandtab
set tabstop=4
set cindent

set shiftwidth=4
"set so=999

" keep backup and swap files in a single place
" make sure that these directories exist - vim will not create them
set backup
set backupdir=~/.vim/backup
set directory=~/.vim/tmp

" highlight current line
" set cursorline
" hi CursorLine term=none cterm=none ctermbg=2

" show ruler and current command
set ruler
set showcmd

" mapping to uppercase word
nnoremap U <esc>vbUwi

" abbreviations
iabbrev @@ jchancehud@gmail.com
" iabbrev ## #import <Foundation/Foundation.h>

function! ToggleColor()
    if match(&background, "dark") == -1
        set background=dark
    else
        set background=light
    endif
endfunction

" map function keys
map <Esc>[1;2P <S-F1>
map <Esc>[1;2Q <S-F2>
map <Esc>[1;2R <S-F3>
map <Esc>[1;2S <S-F4>
map <Esc>[15;2~ <S-F5>
map <Esc>[17;2~ <S-F6>
map <Esc>[18;2~ <S-F7>
map <Esc>[19;2~ <S-F8>
map <Esc>[20;2~ <S-F9>
map <Esc>[21;2~ <S-F10>
map <Esc>[23;2~ <S-F11>
map <Esc>[24;2~ <S-F12>

map <Esc>OP <F1>
map <Esc>OQ <F2>
map <Esc>OR <F3>
map <Esc>OS <F4>
map <Esc>[15;~ <F5>
map <Esc>[17;~ <F6>
map <Esc>[18;~ <F7>
map <Esc>[19;~ <F8>
map <Esc>[20;~ <F9>
map <Esc>[21;~ <F10>
map <Esc>[23;~ <F11>
map <Esc>[24;~ <F12>

nmap <silent> <F2> :call ToggleColor()<CR>

" pretty self explanatory
nnoremap ; :

" i'll write this later

function! AddHeader()

endfunction

" auto layout saving
" create session
function! MakeSession()
    let b:sessiondir = $HOME . "/.vim_sessions" . getcwd()
    if (filewritable(b:sessiondir) != 2)
        exe 'silent !mkdir -p ' b:sessiondir
        redraw!
    endif
    let b:filename = b:sessiondir . '/session.vim'
    exe "mksession! " . b:filename
endfunction

" update the session if it exists
function! UpdateSession()
    let b:sessiondir = $HOME . "/.vim_sessions" . getcwd()
    let b:sessionfile = b:sessiondir . "/session.vim"
    if (filereadable(b:sessionfile))
        exe "mksession! " . b:sessionfile
    endif
endfunction

" load the session
function! LoadSession()
    let b:sessiondir = $HOME . "/.vim_sessions" . getcwd()
    let b:sessionfile = b:sessiondir . "/session.vim"
    if (filereadable(b:sessionfile))
        exe 'source ' b:sessionfile
    else
        echo "No session loaded."
    endif
endfunction

au VimEnter * nested :call LoadSession()
au VimLeave * :call UpdateSession()
map <leader>m :call MakeSession()<CR>
